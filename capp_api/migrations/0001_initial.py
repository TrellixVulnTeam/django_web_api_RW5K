# Generated by Django 3.0.7 on 2020-08-11 17:08

import capp_api.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('phone_number', models.CharField(max_length=17, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+99999999'. Up to 15 digits allowed.", regex='^\\+[1-9]{1}[0-9]{7,11}$')])),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('is_super_user', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='')),
                ('phone_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', capp_api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Consultant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('type', models.CharField(choices=[('s', 'sports'), ('e', 'educational'), ('n', 'nutrition')], default='e', max_length=20)),
                ('presentation', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CreditInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit', models.DecimalField(decimal_places=0, default=0, max_digits=9, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('IRR', 'IRR')], default='USD', max_length=3)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='credit_info', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=20)),
                ('explanation', models.TextField(blank=True, max_length=500, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(verbose_name=django.utils.timezone.now)),
                ('expiration_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('priority', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('is_consulting', models.BooleanField(default=False)),
                ('user_extra_info', models.TextField(blank=True, max_length=500, null=True)),
                ('consultant', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='capp_api.Consultant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=50)),
                ('explanation', models.CharField(blank=True, max_length=200, null=True)),
                ('creation_time', models.DateTimeField(verbose_name=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='capp_api.Group')),
            ],
        ),
        migrations.CreateModel(
            name='TaskComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('reply_for', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_comments', to='capp_api.TaskComments')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_comments', to='capp_api.Tasks')),
                ('writer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Responsible',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsible', to='capp_api.Tasks')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsible', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlanComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_comments', to='capp_api.Plan')),
                ('reply_for', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_comments', to='capp_api.PlanComments')),
                ('writer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('text', models.TextField(max_length=500)),
                ('plan', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='note', to='capp_api.Plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='note', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=20, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member', to='capp_api.Group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=50)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('alarm_is_active', models.BooleanField(default=False)),
                ('importance', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('progress', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='capp_api.Plan')),
            ],
        ),
        migrations.CreateModel(
            name='CreditLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('text', models.TextField(max_length=500)),
                ('credit', models.ForeignKey(on_delete=models.SET(0), related_name='credit_logs', to='capp_api.CreditInfo')),
            ],
        ),
        migrations.AddField(
            model_name='consultant',
            name='credit_log',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='being_consultant', to='capp_api.CreditLogs'),
        ),
        migrations.AddField(
            model_name='consultant',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='BuyingConsultant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consulting_time', models.TextField(max_length=500)),
                ('consultant', models.ForeignKey(on_delete=models.SET(0), related_name='buying_consultant', to='capp_api.Consultant')),
                ('credit_log', models.OneToOneField(on_delete=models.SET(0), related_name='buying_consultant', to='capp_api.CreditLogs')),
                ('user', models.ForeignKey(on_delete=models.SET(0), related_name='buying_consultant', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('creation_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('cost', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('code', models.CharField(max_length=200)),
                ('credit', models.ForeignKey(on_delete=models.SET(0), related_name='bills', to='capp_api.CreditInfo')),
            ],
        ),
        migrations.CreateModel(
            name='Access',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_name', models.IntegerField(choices=[(1, 'add member'), (2, 'remove member'), (3, 'change items'), (4, 'comment to other')])),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access', to='capp_api.Member')),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='types', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('title', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('times', models.TextField(max_length=500)),
                ('cost', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='capp_api.Consultant')),
            ],
            options={
                'unique_together': {('cost', 'consultation')},
            },
        ),
    ]
